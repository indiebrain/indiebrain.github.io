#+TITLE:       DIY Baby Monitor
#+AUTHOR:      Aaron Kuehler
#+DATE:        <2017-10-04 Wed>
#+URI:         /blog/%y/%m/%d/diy-baby-monitor
#+KEYWORDS:    raspberry pi, baby monitor, diy
#+TAGS:        hardware, raspberry pi
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Project log detailing the build of a Baby Monitor with a Raspberry Pi

* Motivation

"Daddy, you have to stop talking to me through the camera at night" is the phrase which immediately preceded the hurried unplugging and dismantling of the [[https://www.amazon.com/gp/product/B006ZP8UOW/ref%3Doh_aui_search_detailpage?ie%3DUTF8&psc%3D1][Foscam FI8910W]] in the children's room. For you see, I had never used the two-way audio functionality of the device. It's a hard pill to swallow, you're supposed to be their protector but you've potentially invited the faceless stranger into their bedroom. Such was my experience. We purchased the Foscam IP night-vision camera to remotely monitor our child at night. We locked the thing down, allowing LAN connections to the video/audio stream. It's hard to say if the worst-case interpretation of the child's account actually took place, but it's enough to make any parent yank the device from the wall and put it in a sound and light proof hole in the ground. Also, security issues with these types of IP cameras and baby monitors have been [[https://krebsonsecurity.com/2014/01/bug-exposes-ip-cameras-baby-monitors/][known to occur]]. So what's a parent to do?

This is a project log detailing how I built a less-creepy baby monitor for a fraction of the cost of an IP camera.

* Parts list

- [[https://www.amazon.com/gp/product/B01C6Q2GSY/ref%3Doh_aui_search_detailpage?ie%3DUTF8&psc%3D1][Raspberry Pi 3 Model B]]
- [[https://www.adafruit.com/product/3100][Pi Noir Infrared Camera Module]]
- [[https://www.amazon.com/gp/product/B00QM3KI7E/ref%3Doh_aui_search_detailpage?ie%3DUTF8&psc%3D1][850nm Infrared Illuminator]]

* The Build

FWIW, here's the kernel version I'm working with:

#+BEGIN_SRC sh
pi@raspberrypi:~ $ uname -a
Linux raspberrypi 4.9.41-v7+ #1023 SMP Tue Aug 8 16:00:15 BST 2017 armv7l GNU/Linux
#+END_SRC

** Connect the Pi Noir

** Enable the Camera

Enable the pi camera port by loading the kernel modules. There are two potential ways to do this.

First, one can use the =sudo raspi-config= tool.


Second, one can load the camera kernel modules with =modprobe= and =/etc/modules=:

#+CAPTION: manually load the camera kernel module
#+NAME: /etc/modules
#+BEGIN_SRC sh
sudo modprobe bcm2835-v4l2
#+END_SRC

#+CAPTION: /etc/modules - automatically load the camera kernel modules on boot
#+NAME: /etc/modules
#+BEGIN_SRC sh
...
bcm2835-v4l2
#+END_SRC


** Install the =motion= package

#+BEGIN_SRC sh
sudo apt update
sudo apt install motion
#+END_SRC

** Configure motion

With the camera modules loaded and the pi camera connected to the board, the device should be available at =/dev/video0=. We want to tell motion use the pi camera at =/dev/video0=:

#+CAPTION: /etc/motion/motion.conf
#+NAME: /etc/motion/motion.conf
#+BEGIN_SRC conf
  # Videodevice to be used for capturing  (default /dev/video0)
  # for FreeBSD default is /dev/bktr0
  videodevice /dev/video0
#+END_SRC

The dimensions of the captured images can be manipulated as well. Here I use a small, but reasonable size as to not flood the pi's file system with large images.

#+BEGIN_SRC conf
  # Image width (pixels). Valid range: Camera dependent, default: 352
  width 640

  # Image height (pixels). Valid range: Camera dependent, default: 288
  height 480
#+END_SRC

Next set the frame-rate of the captured video. I set mine to 24 frames-per-second. It provides a fairly fluid sense of motion and the pi seems to keep up pretty well with it.

#+BEGIN_SRC conf
  # Maximum number of frames to be captured per second.
  # Valid range: 2-100. Default: 100 (almost no limit).
  framerate 24
#+END_SRC

Allow LAN connections to the video stream.

#+BEGIN_SRC conf
  # Restrict stream connections to localhost only (default: on)
  stream_localhost off
#+END_SRC
