#+TITLE:       Aaron Kuehler
#+AUTHOR:
#+DATE:
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Professional information of Aaron Kuehler
#+OPTIONS: texht:t
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [12pt letterpaper notitlepage]
#+LATEX_HEADER: \pagenumbering{gobble}
#+LATEX_HEADER: \usepackage{helvet}
#+LATEX_HEADER: \renewcommand{\familydefault}{phv}
#+LATEX_HEADER: \usepackage{parskip}
#+LATEX_HEADER: \usepackage[margin=0.75in]{geometry}

#+BEGIN_QUOTE
Always remember, our purpose is not to "write code", but rather add
value.
#+END_QUOTE

* Skills Summary

- Web Application Development (Ruby/Rails and Standard Web
  Technologies - HTTP, JavaScript, CSS)
- API Development (Ruby/Rails)
- Development tooling, Continuous Integration, Deployment Automation,
  and Workload Orchestration (Bash, Jenkins, Docker, Kubernetes)
- Team Growth and Leadership (agility, Lean Manufacturing
  Principles, and Extreme Ownership)
- Mentor and Educator

* Experience

** exercism.io

*Volunteer Mentor*

/August 2019 - Present/

Exercism.io is a virtual community which provides users the opportunity
to gain fluency and mastery of over 100 programming languages by
completing and reviewing code exercises with human mentors and
reviewers. I serve as a volunteer mentor and provide guidance to
students along the Ruby and Emacs-Lisp tracks.

** Power Home Remodeling Group

*Senior Software Developer / Substitute Instructor / Mentor*

/May 2018 - Present/

Nitro, a 10 year old, monolithic Ruby on Rails application, drives every
aspect of Power's business - from data collection of the marketing
teams, to the telephony system used by the scheduling and dispatching
teams, to ordering and warehouse management, and beyond. Nitro uses a
"Component Based Rails Applications" (https://cbra.info) organization of
and dependencies between its large domains. I currently administer and
participate in the work of the "Release Engineering" team. We support
the application domain teams with customized tooling, delivery pipeline,
and operational support of applications running on our Kubernetes
cluster. As part of this role, I've made non-trivial contributions to
the Open Source software the Power teams use. The largest contributions
include adding "Review Stacks" and "Custom task execution strategies" to
the Shopify/shipit-engine project. In past roles, I served on teams in
charge of our Business Intelligence and Telephony systems.

I also volunteer as a substitute instructor, teaching assistant, and
mentor as part of Power's internal Software Development bootcamp.

** Bauer Xcel Media

*Technical Team Lead / Senior Software Developer*

/February 2016 - May 2018/

At Bauer, Technical Team Lead is a role which augments a member of the
development staff's role slightly. In addition to contributing to the
development process, they are required to act as force multipliers. They
are responsible for the augmentation of team effectiveness and
efficiency. They inspire change in individual and team behavior to
achieve this goal.

During my time as team lead we've reduced average Story cycle time by
34.37%. We've used pair programming as a means to build trust and
rapport between teammates - removing waste in unnecessary review
processes and improving morale. We've trimmed waste and refocused the
team to reduce WIP and plan more appropriately to the constraints of our
pipeline. We are able to react to unplanned work with minimal risk to
commitments. We more predictably delivered on commitments which has
built trust with stakeholders - planning and negotiations run more
smoothly as a result.

During an internal "Hack-a-thon" in 2017, I rallied a team of 3
developers behind the idea of deployment automation. In two days we
completed work which made on-demand application review instances -
review instance per pull request - and continuous delivery to production
a reality at Bauer. The work-products of these two days alone saved the
company 50% in month-over-month hosting costs.

** Sizmek (formerly PointRoll)

*Software Developer*

/January 2015 - June 2016/

In January of 2015, Pointroll was in the midst of a turbulent
reorganization. I was brought on to share my experience and ideas on
becoming a more agile team - changing the mind-set away from delivering
code to delivering value to the business. I helped shape development
workflows and deployment pipeline to help facilitate the concurrent
development of multiple code bases by an even greater number of teams. I
helped create, contributed to, and ran the PointRoll Community or
Practice. A bi-weekly lunch-and-learn type talk series designed to
distribute knowledge and increase cross-team interpersonal
relationships. Pointroll was acquired for its customer base by Sizmek in
November of 2015 for $20 million. I was part of a skeleton crew who
"kept the lights on" until June 2016 when the PointRoll systems were
retired.

** Hoopla

*Software Developer*

/July 2012 - January 2015/

In July 2012 I became the 3rd full-time developer hire at Hoopla. I was
brought on to augment the development capacity of the team as the
product grew into larger markets and acquired bigger clients like:
LinkedIn, Zillow, Angie's List, and Ring Central. I would spend most of
my first 2 years working on the core web application and external event
processing integration with Salesforce. Later I would lead the
development effort of the Native mobile version of the Hoopla platform.

** Artisan (formerly AppRenaissance)

*Senior Software Developer*

/July 2011 - July 2012/

As the 3rd employee of, then, AppRenaissance I helped grow a small
mobile-developers-for-hire team into a mobile products/platform company.
Initially, I spent most of my time helping clients with software,
product, and business development. Later we would start to change focus
to providing services and products for mobile developers.

** Infor

*Software Engineer*

/May 2009 - July 2011/

In May 2009, Infor was in the midst of re-architecture of its ERP and
logistics management software. This re-architecture saw an old
monolithic, database driven application transformed into nearly two
dozen independent, distributed services. As the member of many teams
within the team, I adied in the definition and implementation of several
of these components - from Requisition and Orders to Accounts Payable
modules. Early on I would establish the "Brown Bag Club"; an opt-in
lunchtime discussion forum and knowledge sharing opportunity.

** Oracle (formerly AdminServer)

*Application Engineer*

/February 2006 - June 2009/

Initially worked on the flagship Life & Annuity insurance policy
administration system. Eventually I was asked to join the technology
skunk-works and performance teams to lay the foundation for the
next-generation of this product. Later on I would be asked to lead the
"backend" development of the next-generation of the policy
administration system.

* Open Source Contributions

** Shopify/shipit-engine

https://github.com/Shopify/shipit-engine

Shipit is a deployment tool that makes shipping code better for
everyone. It's especially great for large teams of developers and
designers who work together to build and deploy GitHub repos.

** percona-xtradb-cluster-operator

https://github.com/indiebrain/percona-xtradb-cluster-operator

A Kubernetes operator for Percona XtraDB Cluster based on the Operator
SDK.

** rubyforgood/mutual-aid

https://github.com/rubyforgood/mutual-aid

Mutual Aid is when people get together to build community by volunarily
sharing resources with each other. Mutual Aid groups are more concerned
about local resiliency than global campaigns, and prefer solidarity
before charity.

* Side Projects

** asdf-guile

https://github.com/indiebrain/asdf-guile

An [[https://github.com/asdf-vm/asdf][asdf]] version manager plugin to manage [[https://www.gnu.org/software/guile/][GNU Guile]] installations

** futurist

https://github.com/indiebrain/futurist

An implementation of the future construct, inspired by Celluloid's block
based futures, which uses process forking as a means of backgrounding
work.

** backbone-elasticsearch

https://github.com/indiebrain/backbone-elasticsearch

Adapters and Utilities to interface Backbone.js with ElasticSearch

** OmniAuth Doximity OAuth2

https://github.com/indiebrain/omniauth-doximity_oauth2

An OmniAuth (https://github.com/intridea/omniauth) OAuth2 strategy for
Doximity (http://www.doximity.com/)

* Talks

** Git Internals

https://github.com/indiebrain/talks/blob/master/git_internals/git_internals.org

Does git's user interface seem cryptic? Are you often confused about
when you should use 'checkout' vs 'reset'? Does 'rebase' feel scary?
This talk explains the inner workings of git and sheds a bit of light on
how the internal structure of git as a data store influences its user
interface.

* Elsewhere

- https://aaronkuehler.com
- https://www.github.com/indiebrain
- https://twitter.com/indiebrain
- https://www.linkedin.com/in/aaronkuehler/

* Education

** West Chester University of Pennsylvania

*Bachelor of Science, Computer Science with Information Assurance Minor*

/January 2006/

- Magna Cum Laude
- Award for Academic Excellence (2006)
- Dean's list (2005 and 2006)

* Research

** Small File Affects on Hadoop Distributed File System

- [[https://raw.githubusercontent.com/indiebrain/indiebrain.github.io/source/resume/small-file-affects-on-hadoop-distributed-file-sytem.pdf][Whitepaper PDF]]

The Hadoop Distributed File System is a high throughput distributed File
system designed to accommodate large data sets; average file sizes in
the gigabyte-terabyte range. However when a data set is composed of
large amounts of small files, say in the kilobyte range, the storage
system's semantics introduce hight amounts of overhead in terms of file
system block storage and read latency. This paper explains the
architectural attributes which cause these problems and examines
techniques to mitigate their impact when working with data sets
comprised of large numbers of small files.
