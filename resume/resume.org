#+TITLE:       Aaron Kuehler
#+AUTHOR:
#+DATE:
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Professional information of Aaron Kuehler
#+OPTIONS: texht:t
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [12pt letterpaper notitlepage]
#+LATEX_HEADER: \pagenumbering{gobble}
#+LATEX_HEADER: \usepackage{helvet}
#+LATEX_HEADER: \renewcommand{\familydefault}{phv}
#+LATEX_HEADER: \usepackage{parskip}
#+LATEX_HEADER: \usepackage[margin=0.75in]{geometry}

#+BEGIN_QUOTE
Always remember, our purpose is not to "write code", but rather add
value.
#+END_QUOTE

* Skills Summary

- Web Application Development (Ruby/Rails and Standard Web
  Technologies - HTTP, JavaScript, CSS)
- API Development (Ruby/Rails)
- Development tooling, Continuous Integration, Deployment Automation,
  and Workload Orchestration (Bash, Jenkins, Docker, Kubernetes)
- Team Growth and Leadership (agility, Lean Manufacturing
  Principles, and Extreme Ownership)
- Mentor and Educator

* Experience

** exercism.io

*Volunteer Mentor*

/August 2019 - Present/

- Provide exercise evaluations and guidance to students along the Ruby
  and Emacs-Lisp tracks

** Power Home Remodeling Group

*Senior Software Developer / Substitute Instructor / Mentor*

/May 2018 - Present/

- Run planning and commitment ceremonies for the "Release Engineering"
  team
- Develop software delivery pipeline tooling using Jenkins CI, Docker,
  Shopify/shipit-engine, Shopify/krane, and Kubernetes
- Coordinate and contribute enhancements to Shopify/shipit-engine - some
  of note: "Review Stacks ([[https://github.com/Shopify/shipit-engine/pull/1102][#1102]])", "Custom task execution strategies
  ([[https://github.com/Shopify/shipit-engine/pull/1107][#1107]])", and "Fix: corrupt git caches cause tasks to 'exit status
  128'" ([[https://github.com/Shopify/shipit-engine/pull/1169][#1169]])
- Develop tooling to ease on-boarding, and improve Quality of Life for
  development teams
- Maintain and evolve 10+ year old "Component based Rails Application"
  (https://cbra.info)
- Integrate "Business Intelligence" visualization using JavaScript (ES6)
- Support telephony applications using Asterisk / SIP

** Bauer Xcel Media

*Technical Team Lead / Senior Software Developer*

/February 2016 - May 2018/

- Developed home-grown, multi-tenant, publishing and sweepstakes Rails
  applications
- Developed team's operational support competence and distribute knowledge
  by creating the "On-call / incident response playbook"
- Introduced process monitoring metrics and reduced Cycle time by 34.4%
- Developed automated "Review Application" workflow, cutting monthly
  development team hosting costs by 50%

** Sizmek (formerly PointRoll)

*Software Developer*

/January 2015 - June 2016/

- Developed targeted video advertising platform using VAST XML delivery
  standards.
- Mentored team through transition to an agility based software process
- Supported business through acquisition to eventual shuttering of
  projects while "keeping the lights on" for clients such as Apple,
  Jaguar, and BMW.

** Hoopla

*Software Developer*

/July 2012 - January 2015/

- Developed Hoopla platform - Rails application for sales team
  motivation
- Maintained Salesforce integration - Apex based communication bridge
  between Salesforce Orgs and Hoopla metrics and events APIs.
- Developed "Hoopla TV" - a web based sales SportsCenter-esque UI over
  the Hoopla platform to display sales metrics and events
- Lead Mobile API development team and later absorbed the responsibility
  of native mobile application development

** Artisan (formerly AppRenaissance)

*Senior Software Developer*

/July 2011 - July 2012/

- Develop and deploy native iOS applications to the App store for
  clients; projects included Chinoki, Trustlines, and Interact
- Built consulting business from 2 developers to product team of 10 in
  less than a year

** Infor

*Software Engineer*

/May 2009 - July 2011/

- Developed "Orders and Requisitions" and "Accounts Payable" components
  of the Enterprise Resource Planning system
- Founded the "Brown-Bag" club to promote cross-team relationship
  building, and knowledge sharing

** Oracle (formerly AdminServer)

*Application Engineer*

/February 2006 - June 2009/

- Developed data-driven Life and Annuity insurance policy administration
  system
- Participate in research and development, and technology evaluation for
  future platform enhancements
- Lead development team to incorporate R&D findings into product
  evolution

* Open Source Contributions

** Shopify/shipit-engine

https://github.com/Shopify/shipit-engine

Shipit is a deployment tool that makes shipping code better for
everyone. It's especially great for large teams of developers and
designers who work together to build and deploy GitHub repos.

** percona-xtradb-cluster-operator

https://github.com/indiebrain/percona-xtradb-cluster-operator

A Kubernetes operator for Percona XtraDB Cluster based on the Operator
SDK.

** rubyforgood/mutual-aid

https://github.com/rubyforgood/mutual-aid

Mutual Aid is when people get together to build community by volunarily
sharing resources with each other. Mutual Aid groups are more concerned
about local resiliency than global campaigns, and prefer solidarity
before charity.

* Side Projects

** asdf-guile

https://github.com/indiebrain/asdf-guile

An [[https://github.com/asdf-vm/asdf][asdf]] version manager plugin to manage [[https://www.gnu.org/software/guile/][GNU Guile]] installations

** futurist

https://github.com/indiebrain/futurist

An implementation of the future construct, inspired by Celluloid's block
based futures, which uses process forking as a means of backgrounding
work.

** backbone-elasticsearch

https://github.com/indiebrain/backbone-elasticsearch

Adapters and Utilities to interface Backbone.js with ElasticSearch

** OmniAuth Doximity OAuth2

https://github.com/indiebrain/omniauth-doximity_oauth2

An OmniAuth (https://github.com/intridea/omniauth) OAuth2 strategy for
Doximity (http://www.doximity.com/)

* Talks

** Git Internals

https://github.com/indiebrain/talks/blob/master/git_internals/git_internals.org

Does git's user interface seem cryptic? Are you often confused about
when you should use 'checkout' vs 'reset'? Does 'rebase' feel scary?
This talk explains the inner workings of git and sheds a bit of light on
how the internal structure of git as a data store influences its user
interface.

* Elsewhere

- https://aaronkuehler.com
- https://www.github.com/indiebrain
- https://twitter.com/indiebrain
- https://www.linkedin.com/in/aaronkuehler/

* Education

** West Chester University of Pennsylvania

*Bachelor of Science, Computer Science with Information Assurance Minor*

/January 2006/

- Magna Cum Laude
- Award for Academic Excellence (2006)
- Dean's list (2005 and 2006)

* Research

** Small File Affects on Hadoop Distributed File System

- [[https://raw.githubusercontent.com/indiebrain/indiebrain.github.io/source/resume/small-file-affects-on-hadoop-distributed-file-sytem.pdf][Whitepaper PDF]]

The Hadoop Distributed File System is a high throughput distributed File
system designed to accommodate large data sets; average file sizes in
the gigabyte-terabyte range. However when a data set is composed of
large amounts of small files, say in the kilobyte range, the storage
system's semantics introduce hight amounts of overhead in terms of file
system block storage and read latency. This paper explains the
architectural attributes which cause these problems and examines
techniques to mitigate their impact when working with data sets
comprised of large numbers of small files.
